version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            python --version
            python -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install pytest-cov
            pip install flask
            pip install pylint
            pip install coverage
            pip install robotframework
            pip install robotframework-seleniumlibrary

      - run:
          name: Install Chrome and ChromeDriver
          command: |
            curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/linux_signing_key.pub
            sudo apt-key add /tmp/linux_signing_key.pub
            echo "deb https://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            LATEST_CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
            sudo curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$LATEST_CHROMEDRIVER_VERSION/chromedriver_linux64.zip
            sudo unzip /tmp/chromedriver_linux64.zip chromedriver -d /usr/local/bin/

      - run:
          name: Run python program
          command: |
            source venv/bin/activate
            python3 app.py &

      - run:
          name: Run acceptance tests
          command: |
            source venv/bin/activate
            cd tests
            robot --outputdir results/ test.robot

      - run:
          name: Run tests
          command: |
            source venv/bin/activate
            pytest --cov
            coverage report -m

      - run:
          name: Perform static analysis
          command: |
            source venv/bin/activate
            pylint -d C0116,C0114 app.py

      - run:
          name: Kill python program
          command: |
            source venv/bin/activate
            pkill -f app.py

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build

